{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\egona\\\\source\\\\repos\\\\ASPNetCoreReact\\\\reactclient\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Constants from \"./utilities/Constants\";\nimport PostCreateFrom from \"./components/PostCreateFrom\";\nimport PostUpdateFrom from \"./components/PostUpdateFrom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [showingCreateNewPostForm, setShowingCreateNewPostForm] = useState(false);\n  const [postCurrentlyBeingUpdated, setPostCurrentlyBeingUpdated] = useState(null);\n\n  function getPosts() {\n    const url = Constants.API_URL_GET_ALL_POSTS;\n    fetch(url, {\n      method: 'GET'\n    }).then(response => response.json()).then(postsFromServer => {\n      setPosts(postsFromServer);\n    }).catch(error => {\n      console.log(error);\n      alert(error);\n    });\n  }\n\n  function deletePost(postId) {\n    const url = `${Constants.API_URL_DELETE_POST_BY_ID}/${postId}`;\n    fetch(url, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(responseFromServer => {\n      console.log(responseFromServer);\n      onPostDeleted(postId);\n    }).catch(error => {\n      console.log(error);\n      alert(error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row min-vh-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col d-flex flex-column justify-content-center align-items-center\",\n        children: [showingCreateNewPostForm === false && postCurrentlyBeingUpdated === null && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"ASP.Net Core\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: getPosts,\n              className: \"btn btn-dark btn-lg w-100\",\n              children: \"Get Posts from server\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowingCreateNewPostForm(true),\n              className: \"btn btn-secondary btn-lg w-100 mt-4\",\n              children: \"Create New Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), posts.length > 0 && showingCreateNewPostForm === false && postCurrentlyBeingUpdated === null && renderPostsTable(), showingCreateNewPostForm && /*#__PURE__*/_jsxDEV(PostCreateFrom, {\n          onPostCreated: onPostCreated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 40\n        }, this), postCurrentlyBeingUpdated !== null && /*#__PURE__*/_jsxDEV(PostUpdateFrom, {\n          post: postCurrentlyBeingUpdated,\n          onPostUpdated: onPostUpdated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 50\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n\n  function renderPostsTable() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-responsive mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered border-dark\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"PostId (PK)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"CRUD Operations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: posts.map(post => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: post.postId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: post.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setPostCurrentlyBeingUpdated(post),\n                className: \"btn btn-dark btn-lg mx-3 my-3\",\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  if (window.confirm(`Are you sure you want to delete the post titled \"${post.title}\"?`)) deletePost(post.postId);\n                },\n                className: \"btn btn-secondary btn-lg\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)]\n          }, post.postId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPosts([]),\n        className: \"btn btn-dark btn-lg w-100\",\n        children: \"Hide the table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n  function onPostCreated(createdPost) {\n    setShowingCreateNewPostForm(false);\n\n    if (createdPost === null) {\n      return;\n    }\n\n    alert(`Post successfully created. After clicking OK, your new post titled \"${createdPost.title}\" will show u in the table below.`);\n    getPosts();\n  }\n\n  function onPostUpdated(updatedPost) {\n    setPostCurrentlyBeingUpdated(null);\n\n    if (updatedPost === null) {\n      return;\n    }\n\n    let postsCopy = [...posts];\n    const index = postsCopy.findIndex((postsCopyPost, currentIndex) => {\n      if (postsCopyPost.postId === updatedPost.postId) {\n        return;\n      }\n    });\n\n    if (index !== -1) {\n      postsCopy[index] = updatedPost;\n    }\n\n    setPosts(postsCopy);\n    alert(`Post successfully update. After clicking OK, look for the post with the title \"${updatedPost.title}\" in the table below to see the updates.`);\n    getPosts();\n  }\n\n  function onPostDeleted(deletedPostPostId) {\n    let postsCopy = [...posts];\n    const index = postsCopy.findIndex((postsCopyPost, currentIndex) => {\n      if (postsCopyPost.postId === deletedPostPostId) {\n        return;\n      }\n    });\n\n    if (index !== -1) {\n      postsCopy.splice(index, 1);\n    }\n\n    setPosts(postsCopy);\n    alert('Post succssfully deleted.');\n    getPosts();\n  }\n}\n\n_s(App, \"S49c88sMji6zlPsU3uFHJWGWn1g=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Constants","PostCreateFrom","PostUpdateFrom","App","posts","setPosts","showingCreateNewPostForm","setShowingCreateNewPostForm","postCurrentlyBeingUpdated","setPostCurrentlyBeingUpdated","getPosts","url","API_URL_GET_ALL_POSTS","fetch","method","then","response","json","postsFromServer","catch","error","console","log","alert","deletePost","postId","API_URL_DELETE_POST_BY_ID","responseFromServer","onPostDeleted","length","renderPostsTable","onPostCreated","onPostUpdated","map","post","title","content","window","confirm","createdPost","updatedPost","postsCopy","index","findIndex","postsCopyPost","currentIndex","deletedPostPostId","splice"],"sources":["C:/Users/egona/source/repos/ASPNetCoreReact/reactclient/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Constants from \"./utilities/Constants\";\nimport PostCreateFrom from \"./components/PostCreateFrom\";\nimport PostUpdateFrom from \"./components/PostUpdateFrom\";\n\nexport default function App() {\n  const [posts, setPosts] = useState([]);\n  const [showingCreateNewPostForm, setShowingCreateNewPostForm] = useState(false);\n  const [postCurrentlyBeingUpdated, setPostCurrentlyBeingUpdated] = useState(null);\n\n  function getPosts() {\n    const url = Constants.API_URL_GET_ALL_POSTS;\n\n    fetch(url, {\n      method: 'GET'\n    })\n      .then(response => response.json())\n      .then(postsFromServer => {\n        setPosts(postsFromServer);\n      })\n      .catch((error) => {\n        console.log(error);\n        alert(error);\n      });\n  }\n\n  function deletePost(postId){\n    const url = `${Constants.API_URL_DELETE_POST_BY_ID}/${postId}`;\n\n    fetch(url, {\n      method: 'DELETE'\n    })\n      .then(response => response.json())\n      .then(responseFromServer => {\n        console.log(responseFromServer);\n        onPostDeleted(postId);\n      })\n      .catch((error) => {\n        console.log(error);\n        alert(error);\n      });\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row min-vh-100\">\n        <div className=\"col d-flex flex-column justify-content-center align-items-center\">\n          {(showingCreateNewPostForm === false && postCurrentlyBeingUpdated === null) && (\n            <div>\n              <h1>ASP.Net Core</h1>\n\n              <div className=\"mt-5\">\n                <button onClick={getPosts} className=\"btn btn-dark btn-lg w-100\">Get Posts from server</button>\n                <button onClick={() => setShowingCreateNewPostForm(true)} className=\"btn btn-secondary btn-lg w-100 mt-4\">Create New Post</button>\n              </div>\n            </div>\n          )}\n\n          {(posts.length > 0 && showingCreateNewPostForm === false && postCurrentlyBeingUpdated === null) && renderPostsTable()}\n\n          {showingCreateNewPostForm && <PostCreateFrom onPostCreated={onPostCreated} />}\n\n          {postCurrentlyBeingUpdated !== null && <PostUpdateFrom post={postCurrentlyBeingUpdated} onPostUpdated={onPostUpdated}/>}\n        </div>\n      </div>\n    </div>\n  );\n\n  function renderPostsTable() {\n    return (\n      <div className=\"table-responsive mt-5\">\n        <table className=\"table table-bordered border-dark\">\n          <thead>\n            <tr>\n              <th scope=\"col\">PostId (PK)</th>\n              <th scope=\"col\">Title</th>\n              <th scope=\"col\">Content</th>\n              <th scope=\"col\">CRUD Operations</th>\n            </tr>\n          </thead>\n          <tbody>\n            {posts.map((post) => (\n              <tr key={post.postId}>\n                <th scope=\"row\">{post.postId}</th>\n                <td>{post.title}</td>\n                <td>{post.content}</td>\n                <td>\n                  <button onClick={() => setPostCurrentlyBeingUpdated(post)} className=\"btn btn-dark btn-lg mx-3 my-3\">Update</button>\n                  <button onClick={() => {if(window.confirm(`Are you sure you want to delete the post titled \"${post.title}\"?`)) deletePost(post.postId) }} className=\"btn btn-secondary btn-lg\">Delete</button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n\n        <button onClick={() => setPosts([])} className=\"btn btn-dark btn-lg w-100\">Hide the table</button>\n      </div>\n    );\n  }\n\n  function onPostCreated(createdPost) {\n    setShowingCreateNewPostForm(false);\n    \n    if (createdPost === null) {\n      return;\n    }\n    alert(`Post successfully created. After clicking OK, your new post titled \"${createdPost.title}\" will show u in the table below.`);\n\n    getPosts();\n  }\n\n  function onPostUpdated(updatedPost){\n    setPostCurrentlyBeingUpdated(null);\n    \n    if(updatedPost === null){\n      return;\n    }\n\n    let postsCopy = [...posts];\n\n    const index = postsCopy.findIndex((postsCopyPost, currentIndex) => {\n      if(postsCopyPost.postId === updatedPost.postId){\n        return;\n      }\n    });\n\n    if(index !== -1){\n      postsCopy[index] = updatedPost;\n    }\n\n    setPosts(postsCopy);\n\n    alert(`Post successfully update. After clicking OK, look for the post with the title \"${updatedPost.title}\" in the table below to see the updates.`);\n    getPosts();\n  }\n\n  function onPostDeleted(deletedPostPostId){\n    let postsCopy = [...posts];\n\n    const index = postsCopy.findIndex((postsCopyPost, currentIndex) => {\n      if(postsCopyPost.postId === deletedPostPostId){\n        return;\n      }\n    });\n\n    if(index !== -1){\n      postsCopy.splice(index, 1);\n    }\n\n    setPosts(postsCopy);\n\n    alert('Post succssfully deleted.');\n    getPosts();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}